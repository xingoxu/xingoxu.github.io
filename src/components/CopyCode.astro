---
import I18nKey from '@i18n/i18nKey';
const pageLang =
  Astro.params.lang || siteConfig.lang;
import { siteConfig } from '@/config';
import { i18n } from '@i18n/translation';
const text = {
  [I18nKey.copyCode]: i18n(
    I18nKey.copyCode,
    pageLang,
  ),
  [I18nKey.codeCopied]: i18n(
    I18nKey.codeCopied,
    pageLang,
  ),
};
---

<div class="wrapper hidden relative" id="copy-code-template">
  <button class="copy-code">{text[I18nKey.copyCode]}</button>
  <template class="hidden">{JSON.stringify(text)}</template>
</div>

<script>
  import I18nKey from "@i18n/i18nKey";
  import { addSwupHook } from "@utils/dom-utils";
  let multiLanguageText = {
    [I18nKey.copyCode]: I18nKey.copyCode,
    [I18nKey.codeCopied]: I18nKey.codeCopied,
  };

  function initCopyCode() {
    let codeBlocks = Array.from(document.querySelectorAll("pre.astro-code"));

    const template = document.querySelector("#copy-code-template");
    if (template === null) {
      return;
    }

    console.log("CopyCode - multiLanguageText", multiLanguageText);

    for (let codeBlock of codeBlocks) {
      const clonedWrapper = template.cloneNode(true) as HTMLElement;

      // remove id & "hidden" class
      clonedWrapper.removeAttribute("id");
      clonedWrapper.classList.remove("hidden");

      // remove multiLanguage text
      const multiLanguageTemplateNode =
        clonedWrapper.querySelector("template")!;
      multiLanguageText = JSON.parse(multiLanguageTemplateNode.innerHTML);
      multiLanguageTemplateNode.remove();

      clonedWrapper
        .querySelector("button.copy-code" as "button")
        ?.addEventListener("click", async function (e) {
          await copyCode(codeBlock, this);
        });
      codeBlock.parentNode?.insertBefore(clonedWrapper, codeBlock);
      clonedWrapper.appendChild(codeBlock);
    }
  }

  async function copyCode(block: Element, button: HTMLButtonElement) {
    let code = block.querySelector("code");
    let text = code?.innerText;

    if (text) {
      await navigator.clipboard.writeText(text);
    }

    // visual feedback that task is completed
    button.innerText = multiLanguageText[I18nKey.codeCopied];

    setTimeout(() => {
      button.innerText = multiLanguageText[I18nKey.copyCode];
    }, 700);
  }

  document.addEventListener("DOMContentLoaded", initCopyCode);
  addSwupHook("page:view", initCopyCode);
</script>

<style>
  .copy-code {
    position: absolute;
    width: fit-content;
    transform: translateY(-100%);
    top: 0;
    right: 0;
    padding: 0.5em 0.75em;
    font-size: 0.75em;
    line-height: 1rem;
    font-family: var(--code-font-family);
    border-top-left-radius: var(--code-border-radius);
    border-top-right-radius: var(--code-border-radius);
    background-color: var(--enter-btn-bg);
    color: var(--inline-code-color);
    transition: background-color 0.3s ease;
  }

  .copy-code:hover {
    background-color: var(--enter-btn-bg-hover);
  }
</style>
