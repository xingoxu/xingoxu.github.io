---
import { Icon } from 'astro-icon/components';
---

<div class="wrapper hidden relative" id="copy-code-template">
  <button class="copy-code text-sm relative">
    <Icon
      name="material-symbols:content-copy-outline"
      class="copy transition-opacity duration-300 ease"
    />
    <Icon
      name="material-symbols:check"
      class="copied absolute transition-opacity duration-300 ease opacity-0 top-[.5em] left-[.75em]"
    />
  </button>
</div>

<script>
  import { addSwupHook } from "@utils/dom-utils";

  function initCopyCode() {
    let codeBlocks = Array.from(document.querySelectorAll("pre.astro-code"));

    const template = document.querySelector("#copy-code-template");
    if (template === null) {
      return;
    }

    for (let codeBlock of codeBlocks) {
      const clonedWrapper = template.cloneNode(true) as HTMLElement;

      // remove id & "hidden" class
      clonedWrapper.removeAttribute("id");
      clonedWrapper.classList.remove("hidden");

      clonedWrapper
        .querySelector("button.copy-code" as "button")
        ?.addEventListener("click", async function (e) {
          await copyCode(codeBlock, this);
        });
      codeBlock.parentNode?.insertBefore(clonedWrapper, codeBlock);
      clonedWrapper.appendChild(codeBlock);
    }
  }

  async function copyCode(block: Element, button: HTMLButtonElement) {
    let code = block.querySelector("code");
    let text = code?.innerText;

    if (text) {
      await navigator.clipboard.writeText(text);
    }

    // visual feedback that task is completed
    button.querySelector(".copy")?.classList.add("opacity-0");
    button.querySelector(".copied")?.classList.remove("opacity-0");

    setTimeout(() => {
      button.querySelector(".copy")?.classList.remove("opacity-0");
      button.querySelector(".copied")?.classList.add("opacity-0");
    }, 700);
  }

  document.addEventListener("DOMContentLoaded", initCopyCode);
  addSwupHook("page:view", initCopyCode);
</script>

<style>
  .copy-code {
    position: absolute;
    width: fit-content;
    transform: translateY(-100%);
    top: 0;
    right: 0;
    padding: 0.5em 0.75em;
    font-family: var(--code-font-family);
    border-top-left-radius: var(--code-border-radius);
    border-top-right-radius: var(--code-border-radius);
    background-color: var(--enter-btn-bg);
    color: var(--inline-code-color);
    transition: background-color 0.3s ease;
  }

  .copy-code:hover {
    background-color: var(--enter-btn-bg-hover);
  }
</style>
